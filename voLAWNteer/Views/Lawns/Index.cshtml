@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@model voLAWNteer.Models.ViewModels.Statistics

@{
    ViewData["Title"] = "Index";
}
<br />
<div id="advertisements">
    <img class="ads" src="~/lawnAd1.jpg" />
    <img class="ads" src="~/lawnAd2.jpg" />
</div>
<br />
<h3>voLAWNteers are now assisting <span class="badge badge-light">@Model.ApprovedLawns.Count() homeowners</span> and have mowed <span class="badge badge-light">@Model.ServiceInstances lawns</span> to date!</h3>
<table class="table">
    <thead>
        @Html.DisplayNameFor(model => model.ApprovedLawns[0].FirstName)

        <tr>
            <th>voLAWNteer</th>
            <th>
                @Html.DisplayNameFor(model => model.ApprovedLawns[0].FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ApprovedLawns[0].StreetAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ApprovedLawns[0].Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ApprovedLawns[0].Description)
            </th>
            <th>
                Last Mowed
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ApprovedLawns[0].Photo)
            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model.ApprovedLawns)
        {
            foreach (var service in item.Services)
            {
                if (service.CompletedDate == null)
                {
                    {
                        <tr>
                            <td>
                                <a asp-controller="Services" asp-action="Edit" asp-route-id="@service.Id"><button class="btn btn-secondary">Select</button></a>

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FirstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StreetAddress) @Html.DisplayFor(modelItem => item.City), @Html.DisplayFor(modelItem => item.State) @Html.DisplayFor(modelItem => item.ZipCode)

                                <a target="_blank" class="badge badge-info" href="@($"https://www.google.com/maps/dir/?api=1&destination={item.StreetAddress}+{item.City}+{item.State}")">Directions</a>

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Size)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                                @if (SignInManager.IsSignedIn(User))
                                {
                                    <a asp-action="Details" asp-route-id="@item.Id" class="badge badge-light">Details</a>
                                }
                            </td>
                            <td>
                                @foreach (Service date in item.Services)
                                {
                                    //get the last one
                                    if (item.Services.IndexOf(date) == item.Services.Count - 1)

                                        @Html.DisplayFor(d => date.ListingCreated)
                                    }
                            </td>
                            <td>
                                <img class="homeImg" src="@Html.DisplayFor(modelItem => item.Photo)" alt="yard image" height="142" width="200" />
                            </td>
                        </tr>
                    }
                }
            }
        }

    </tbody>
</table>

    <div class="container">
        <h1 class="display-4">Approval Statistics</h1>
        <p class="lead">We have been able to approve up to @Model.ApprovedLawns.Count() lawns for voLAWNteer service, we have only denied @Model.DeniedLawns.Count() requests, and we are still considering @Model.PendingLawns.Count() more requests.</p>
    </div>
<br /><br /><br /><br /><br /><br />